# Only run this pipeline for changes in the dotnet code

trigger:
  branches:
    include:
    - master
    - branch-*

  paths:
    include:
    - sonar-secrets-dotnet
  
pr:
  paths:
    include:
    - sonar-secrets-dotnet

pool:
  vmImage: 'windows-latest'

variables:
  - group: sonarsource-build-variables
  - name: buildConfiguration
    value: 'Release'
  - name: slnPath
    value: 'sonar-secrets-dotnet/SonarLint.Secrets.DotNet.sln'
  - name: additionalMSBuildProperties
    value: ''
  - name: nugetFeed
    value: '399fb241-ecc7-4802-8697-dcdd01fbb832/423b576f-2263-43a1-93bd-69f4def19102'
steps:

- task: DownloadSecureFile@1
  displayName: 'Download snk file'
  name: snk
  inputs:
    secureFile: SonarSourceSecret.snk


- task: NuGetCommand@2
  displayName: 'Restore NuGet packages'
  inputs:
    command: 'restore'
    projects: $(slnPath)
    restoreArguments: '--locked-mode'
    feedsToUse: 'select'
    vstsFeed: $(nugetFeed)
    includeNuGetOrg: false

  
- task: VSBuild@1
  displayName: 'Build solution'
  inputs:
    solution: $(slnPath)
    platform: 'Any CPU'
    configuration: '$(buildConfiguration)'
    msbuildArgs: '-p:SignAssembly=true -p:AssemblyOriginatorKeyFile="$(snk.secureFilePath)" /p:CommitId=$(Build.SourceVersion) /p:BranchName=$(Build.SourceBranchName) /p:BuildNumber=$(Build.BuildId) $(additionalMSBuildProperties) '


- task: VSTest@2
  displayName: 'Run .NET unit tests'
  inputs:
     testAssemblyVer2: |
        **\$(BuildConfiguration)\**\*.UnitTests.dll
        !**\obj\**
     runInParallel: true
     runTestsInIsolation: true
     codeCoverageEnabled: true
     platform: '$(buildPlatform)'
     configuration: '$(buildConfiguration)'
     rerunFailedTests: false

- task: DotNetCoreCLI@2
  displayName: 'dotnet pack'
  inputs:
    command: 'pack'
    packagesToPack: 'sonar-secrets-dotnet/src/SonarLint.Secrets.DotNet/SonarLint.Secrets.DotNet.csproj'
    nobuild: true
    packDestination: '$(Build.ArtifactStagingDirectory)'

#- task: PublishPipelineArtifact@1
#  displayName: 'Publish the NuGet package as a pipeline artifact'
#  inputs:
#    path: '$(Build.ArtifactStagingDirectory)'
#    artifact: DotNetNuGet
    
#- task: NuGetAuthenticate@0
#  displayName: 'NuGet authenticate'

#- task: NuGetCommand@2
#  displayName: 'Nuget push'
#  inputs:
#    command: 'push'
#    publishVstsFeed: $(nugetFeed)
#    allowPackageConflicts: true
