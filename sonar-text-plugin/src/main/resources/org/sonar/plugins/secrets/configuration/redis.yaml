provider:
  metadata:
    name: Redis
    category: Data Storage
    message: Make sure these Redis credentials get revoked, changed, and removed from the code.

  rules:
    - rspecKey: S6739
      id: redis-url
      metadata:
        name: Redis URL
      detection:
        matching:
          # Type 1 pattern redis(s)?://{username}:{password}@{host}:{port}/{path}
          pattern: "\\bredis(?:s)?://(\\w+:[^@\\s]+)@[-\\w%.\\+]+\\b(?:[-\\w%.\\+()@:~#?&/=]*)"
        post:
          # Preparation for patternNot v2:
          #patternNot:
          #  # redis://foo:bar@127.0.0.1:5672/"
          #  - "(?i)default|foo|bar|1234"
          #  # redis://admin:#{ENV.fetch("ADMIN_PASSWORD")}@localhost:5672
          #  - "(?i)\\b(get)?env(iron)?\\b"
          # # redis://guest:xxxx@healthy.example.com
          #  - "(\\w)\\1{3,}"
          # # redis://guest:**@healthy.example.com
          #  - ":\\*{2,}"
          #  # redis://admin:{{ rabbitmq_password }}@localhost:8080/endpoint
          #  - ":\\{\\{[^}]++}}"
          #  # redis://admin:%s@host:5672
          #  - "(?i):%s\\b"
          patternNot: 
            "(?i)\
            (\\w)\\1{3,}|\
            default|\
            foo|\
            bar|\
            1234|\
            \\b(get)?env(iron)?\\b|\
            \\*\\*|\
            :%s\\b|\
            :\\{\\{[^}]+}}"
      examples:
        - text: |
            const REDISURL = "redis://foo:bar@127.0.0.1:5672/"
          containsSecret: false
        - text: |
            const REDISURL = "redis://example:**@127.0.0.1:5672/"
          containsSecret: false
        - text: |
            const REDISURL = "redis://example:{{vaul_variable_name}}@127.0.0.1:5672/"
          containsSecret: false
        - text: |
            const REDISURL = "redis://admin:#{ENV.fetch("ADMIN_PASSWORD")}@host:5672"
          containsSecret: false
        - text: |
            const REDISURL = "redis://admin:%s@host:5672"
          containsSecret: false
        - text: |
            const REDISURL = "redis://admin:$env{admin_pwd}@host"
          containsSecret: false
        - text: |
            props.set("redis-url", "rediss://"+System.getenv("REDIS_CREDENTIALS")+"@example.com:8080/example")
          containsSecret: false
        - text: |
            props.set("redis-url", "rediss://admin:awfasefsd@example.com:8080/example")
          containsSecret: true
          match: admin:awfasefsd
        - text: |
            const REDISURL = "redis://examplename:asd_nled9f@127.0.0.1:5672/"
          containsSecret: true
          match: examplename:asd_nled9f
        - text: |
            examples: ["redis://bob:saleneinasldeins@127.0.0.1:5672/%2f?timeout=10"]
          containsSecret: true
          match: bob:saleneinasldeins

    
