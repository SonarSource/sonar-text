provider:
  metadata:
    name: Azure Machine Learning
    category: Artificial Intelligence
    message: Make sure this Azure Machine Learning key gets revoked, changed, and removed from the code.
  detection:
    pre:
      scopes:
        - main
      include:
        content:
          - "bearer"
    post:
      statisticalFilter:
        threshold: 3.5
      patternNot:
        - "(\\w)\\1{5,}"
        - "(?i)(?:s|ex)ample|foo|bar|test|abcd|redacted|key|1234"
  rules:
    - rspecKey: S7022
      id: azure-ml-primsec-t2-key 
      metadata:
        name: Azure Machine Learning primary/secondary key
      detection:
        matching:
          pattern: "(?im)\\b([a-z0-9]{32})(?:[^\\w\\(\\:]|$)"
          context:
            matchEach:
              # It is very likely these criteria will be present.
              - patternAround:
                  pattern: "\\/score['\"`]"
                  maxLineDistance: 15
              - patternAround:
                  pattern: "(?i)\\bBearer\\b"
                  maxLineDistance: 15
              - patternAround:
                  pattern: "(?i)Authorization\\b"
                  maxLineDistance: 15
              - patternAround:
                  pattern: "(?i)\\bjson\\b"
                  maxLineDistance: 15

      examples:
        - text: |
            data = {}

            body = str.encode(json.dumps(data))

            url = 'http://d93d04c2-2739-4bc1-96b6-33ac7e761719.westeurope.azurecontainer.io/score'
            # Replace this with the primary/secondary key, AMLToken, or Microsoft Entra ID token for the endpoint
            api_key = '2JcAqoFpeQZCXpiHFAHnCvLYbbSu51C5'
            if not api_key:
                raise Exception("A key should be provided to invoke the endpoint")

            headers = {'Content-Type':'application/json', 'Authorization':('Bearer' + api_key)}

            req = urllib.request.Request(url, body, headers)
          containsSecret: true
          match: 2JcAqoFpeQZCXpiHFAHnCvLYbbSu51C5
        - text: |
            using (var client = new HttpClient(handler))
            {
                var requestBody = "{}";
                
                // Replace this with the primary/secondary key, AMLToken, or Microsoft Entra ID token for the endpoint
                const string apiKey = "HmkhQRRwTbvMIS5WiRzklSYb1EdakRxV";
                if (string.IsNullOrEmpty(apiKey))
                {
                    throw new Exception("A key should be provided to invoke the endpoint");
                }
                client.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", apiKey);
                client.BaseAddress = new Uri("http//d93d04c2-2739-4bc1-96b6-33ac7e761719.westeurope.azurecontainer.io/score");

                var content = new StringContent(requestBody);
                content.Headers.ContentType = new MediaTypeHeaderValue("application/json");
          containsSecret: true
          match: HmkhQRRwTbvMIS5WiRzklSYb1EdakRxV
        - text: |
            requestBody = enc2utf8(toJSON(req))
            # Replace this with the primary/secondary key, AMLToken, or Microsoft Entra ID token for the endpoint
            api_key = "0mtNMWLZ6gfcOBUHUOLaaYq6hFjZmnFc"
            if (api_key == "" || !is.character(api_key))
            {
                stop("A key should be provided to invoke the endpoint")
            }
            authz_hdr = paste('Bearer', api_key, sep='')

            h$reset()

            # The azureml-model-deployment header will force the request to go to a specific deployment.
            # Remove this header to have the request observe the endpoint traffic rules
            curlPerform(
                url = "http://d93d04c2-2739-4bc1-96b6-33ac7e761719.westeurope.azurecontainer.io/score",
                httpheader=c('Content-Type' = "application/json", 'Authorization' = authz_hdr),
                postfields=requestBody,
                writefunction = h$update,
                headerfunction = hdr$update,
                verbose = TRUE
            )
          containsSecret: true
          match: 0mtNMWLZ6gfcOBUHUOLaaYq6hFjZmnFc 

        # FP Hunting tests:
        - text: |
            class GarbageCollectionHealthIndicator:
              def authorization():
                return "Bearer" + self.api_key, "application/json"
              app.get("/score")
              def score():
                return "you won!"
          containsSecret: false
        - text: |
              MPerfectChecksumGreatestIsntitye = 0dd4f38331aaf1f9db598d3f120b9760
              "application/vnd.jupyter.widget-view+json": {
                "model_id": "29fa6d6a2e7742b226b8f05738a6c046",
              # The API Key is in the Vault
              # You need to pass it to an authorization Bearer header.
              "output_type": "stream",
              "text": "http://anythingworks.eastus.azurecontainer.io/score\n",
              "name": "stdout"
          containsSecret: false

