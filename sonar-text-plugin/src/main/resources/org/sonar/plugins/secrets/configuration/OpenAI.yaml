provider:
  metadata:
    name: OpenAI
    category: Artificial Intelligence
    message: Make sure this OpenAI API key gets revoked, changed, and removed from the code.
  detection:
    pre:
      scopes:
        - main
      include:
        content:
          - "openai"
  rules:
    - rspecKey: S7013
      id: openai
      metadata:
        name: OpenAI API keys should not be disclosed
      detection:
        matching:
          pattern: "\\b(sk-(?:[a-zA-Z0-9-]+-)?([a-zA-Z0-9]{48}))\\b"
          context:
            patternAround:
              pattern: "(?i)openai"
              maxLineDistance: 2
        post:
          statisticalFilter:
            threshold: 3.9
            inputString: rand
          patternNot:
            - "([a-zA-Z0-9])\\1{4,}[^-]*$"
      examples:
        - text: |
            props.set("openai-api-key", "sk-proj-HjexYIWYuDkZotTHif0eT3BlbkFJy9hISv8XIq6QmG1DMUJ9")
          containsSecret: true
          match: "sk-proj-HjexYIWYuDkZotTHif0eT3BlbkFJy9hISv8XIq6QmG1DMUJ9"
        - text: |
            const openai = new OpenAI({
              apiKey: "sk-foobar-pTOaX0lK5EzxpuDfnhqHS1LrvqJAUo2xNJPxrJR6WYQRXxya",
            });
          containsSecret: true
          match: sk-foobar-pTOaX0lK5EzxpuDfnhqHS1LrvqJAUo2xNJPxrJR6WYQRXxya
        - text: |
            const openai = new OpenAI({
              apiKey: "sk-proj-111111111111111111111111111111111111111111111111",
            });
          containsSecret: false
        - text: |
            OPENAI_API_KEY = SecretStr("sk-EUk0Tal8cIkmG4vJF904F57a9eE241A8Ae72666fAxxxxxxx")
          containsSecret: false
        - text: |
            // const configuration = new Configuration({
            //     apiKey: Config.OPENAI_API_KEY || "sk-TyAL0vjvW7gtLhwolRrNE2PajjML6zvx9BqborNnl0RJjkQv",
            // });
          containsSecret: true
          match: sk-TyAL0vjvW7gtLhwolRrNE2PajjML6zvx9BqborNnl0RJjkQv
