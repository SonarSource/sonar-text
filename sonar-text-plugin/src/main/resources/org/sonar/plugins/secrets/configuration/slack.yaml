provider:
  metadata:
    name: Slack
    category: Messaging System
    message: Make sure this Slack Webhook URL gets revoked, changed, and removed from the code.
  detection:
    post:
      #patternNot:
      # # https://hooks.slack.com/services/T00000000/B00000000/XXXXXXXXXXXXXXXXXXXXXXXX
      # - "(\\w)\\1{6,}"
      # - "123456"
      patternNot: 
        "(?i)\
        (\\w)\\1{6,}|\
        123456"
  rules:
    - rspecKey: S6713
      id: slack-incoming-webhook-urls
      metadata:
        name: Slack Incoming Webhook URL
      examples:
        - text: |
            // Use the url you got earlier
            $slack = new Slack('https://hooks.slack.com/services/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');

            // Create a new message
            $message = new SlackMessage($slack);
            $message->setText("Hello world!");

            // Send it!
            if ($message->send()) {
                echo "Hurray ðŸ˜„";
            } else {
                echo "Failed ðŸ˜¢";
            }
          containsSecret: true
          match: https://hooks.slack.com/services/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
        - text: |
            // Use the url you got earlier
            $slack = new Slack('{slack_webhook_url}');

            // Create a new message
            $message = new SlackMessage($slack);
            $message->setText("Hello world!")->setChannel("#general");

            // Send it!
            $message->send();
          containsSecret: false
        - text: |
            // Use the url you got earlier
            $slack = new Slack('https://hooks.slack.com/services/Txxxxxxxx/xxxxxxxxx/xxxxxxxxxxxxxxxxxxxxxxxx');
            // Create a new message
            $message = new SlackMessage($slack);
            $message->setText("Hello world!")->setChannel("#general");
             // Send it!
             $message->send();
          containsSecret: false
      detection:
        matching:
          # the structure is:
          # https://hooks.slack.com/(services/)?{TEAM_ID}/{WEBHOOK_ID}/{WEBHOOK_TOKEN}
          pattern: "((https://)?hooks\\.slack\\.com/services/T[A-Za-z0-9+\\/]{42,45})"

    - rspecKey: S6717
      id: slack-workflow-webhook-urls
      metadata:
        name: Slack Workflow Webhook URL
      examples:
        - text: |
            // Use the url you got earlier
            $slack = new Slack('https://hooks.slack.com/workflows/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');

            // Create a new message
            $message = new SlackMessage($slack);
            $message->setText("Hello world!");

            // Send it!
            if ($message->send()) {
                echo "Hurray ðŸ˜„";
            } else {
                echo "Failed ðŸ˜¢";
            }
          containsSecret: true
          match: https://hooks.slack.com/workflows/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
        - text: |
            // Use the url you got earlier
            $slack = new Slack('{slack_webhook_url}');

            // Create a new message
            $message = new SlackMessage($slack);
            $message->setText("Hello world!")->setChannel("#general");

            // Send it!
            $message->send();
          containsSecret: false
        - text: |
            // Use the url you got earlier
            $slack = new Slack('https://hooks.slack.com/workflows/Txxxxxxxx/xxxxxxxxx/xxxxxxxxxxxxxxxxxxxxxxxx');
            // Create a new message
            $message = new SlackMessage($slack);
            $message->setText("Hello world!")->setChannel("#general");
             // Send it!
             $message->send();
          containsSecret: false
      detection:
        matching:
          pattern: "((https://)?hooks\\.slack\\.com/workflows/T[A-Za-z0-9+\\/]{42,70})"

    - rspecKey: S6731
      id: slack-bot-tokens
      metadata:
        name: Slack Bot Token
        message: Make sure this Slack Bot Token gets revoked, changed, and removed from the code.
      detection:
        pre:
          include:
            content:
              # Slack Bot Token
              - xoxb
              # Slack User Token
              - xoxp
              # Slack Workspace Access Token
              - xoxa
              # Slack Workspace Refresh Token
              - xoxr

        matching:
          # Type 1 secret, fix xox[bpar]-* pattern
          pattern: "(xox[bpar]\\-[0-9]{10,13}\\-[0-9]{10,13}-[\\w\\-]+)"

      examples:
        - text: |
            func main() {
                api := slack.New("xoxb-128493760512-5973168421320-324311228695034717549806")

                // Example: Get the list of channels
                channels, err := api.GetChannels(false)
                if err != nil {
                    log.Fatalf("Error getting channels: %s", err)
                }
          containsSecret: true
          match: xoxb-128493760512-5973168421320-324311228695034717549806
        - text: |
            from slack_sdk import WebClient

            token = "xoxr-ssssssssssss-5973168421320-324311228695034717549806"
            client = WebClient(token=token)
          containsSecret: false
        - text: |
            from slack_sdk import WebClient

            token = "xoxr-123456789012-5973168421320-324311228695034717549806"
            client = WebClient(token=token)
          containsSecret: false
        - text: |
            SLACK_TOKEN="xoxp-635635783416-386159140220-335490975105-6b11243cd4d5582d9ec51b68ed21a769"
          containsSecret: true
          match: xoxp-635635783416-386159140220-335490975105-6b11243cd4d5582d9ec51b68ed21a769
