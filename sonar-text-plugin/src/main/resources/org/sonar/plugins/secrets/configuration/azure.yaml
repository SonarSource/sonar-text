provider:
  metadata:
    name: Azure 
    category: Cloud provider
    references:
      - description: OWASP Top 10 2021 Category A7 - Identification and Authentication Failures
        link:  https://owasp.org/Top10/A07_2021-Identification_and_Authentication_Failures/
        type: Standards
      - description: docs.microsoft.com - Manage storage account access keys
        link:  https://docs.microsoft.com/en-us/azure/storage/common/storage-account-keys-manage?tabs=azure-portal
        type: Documentation
      - description: OWASP Top 10 2017 Category A3 - Sensitive Data Exposure
        link:  https://www.owasp.org/www-project-top-ten/2017/A3_2017-Sensitive_Data_Exposure
        type: Standards
      - description: MITRE, CWE-798 - Use of Hard-coded Credentials
        link:  https://cwe.mitre.org/data/definitions/798
        type: Standards
      - description: MITRE, CWE-259 - Use of Hard-coded Password
        link:  https://cwe.mitre.org/data/definitions/259
        type: Standards
      - description: SANS Top 25 - Porous Defenses
        link:  https://www.sans.org/top25-software-errors/#cat3
        type: Standards
    message: Make sure this Azure Storage Account Key gets revoked, changed, and removed from the code.
  detection:
    post:
        patternNot: "EXAMPLE"

  rules:
    - id: S6338
      metadata:
        name: Azure Storage Account Keys
      examples:
        - text: |
            async function main() {
              const account = process.env.ACCOUNT_NAME || "accountname";
              const accountKey = process.env.ACCOUNT_KEY || "4dVw+l0W8My+FwuZ08dWXn+gHxcmBtS7esLAQSrm6/Om3jeyUKKGMkfAh38kWZlItThQYsg31v23A0w/uVP4pg==";
              const sharedKeyCredential = new StorageSharedKeyCredential(account, accountKey);
              const blobServiceClient = new BlobServiceClient(
                `https://${account}.blob.core.windows.net`,
                sharedKeyCredential
              );
            }
          containsSecret: true
          match: 4dVw+l0W8My+FwuZ08dWXn+gHxcmBtS7esLAQSrm6/Om3jeyUKKGMkfAh38kWZlItThQYsg31v23A0w/uVP4pg==
        - text: |
            AccountKey = "BtS7esLAQSrm6/Om3jeyUKKGMkfAh38kWZlItThQYsg31v23A0w/uVP4pg==";
          containsSecret: false
      detection:
        pre:
          include:
            content:
              - "core.windows.net"
        matching:
          pattern: "['\"`]([a-zA-Z0-9/\\+]{86}==)['\"`]"
    - id: S6338
      metadata:
        name: Azure Storage Account Keys
      examples:
        - text: |
            const connStr = "DefaultEndpointsProtocol=https;AccountName=testaccountname;AccountKey=4dVw+l0W8My+FwuZ08dWXn+gHxcmBtS7esLAQSrm6/Om3jeyUKKGMkfAh38kWZlItThQYsg31v23A0w/uVP4pg==";
          containsSecret: true
          match: 4dVw+l0W8My+FwuZ08dWXn+gHxcmBtS7esLAQSrm6/Om3jeyUKKGMkfAh38kWZlItThQYsg31v23A0w/uVP4pg==
        - text: |
            const connStr = "DefaultEndpointsProtocol=https;AccountName=testaccountname;AccountKey=4dVw+l0W8My+FwuZ08dWXn+gHxcmBtS7esLAQSrm6/Om3jeyUKKGMkfAh38kWZlItThQYsg31v23A0w/uVP4pg==;EndpointSuffix=core.windows.net";
          containsSecret: true
          match: 4dVw+l0W8My+FwuZ08dWXn+gHxcmBtS7esLAQSrm6/Om3jeyUKKGMkfAh38kWZlItThQYsg31v23A0w/uVP4pg==
        - text: |
            AccountKey = "BtS7esLAQSrm6/Om3jeyUKKGMkfAh38kWZlItThQYsg31v23A0w/uVP4pg==";
          containsSecret: false
        - text: |
            const connStr = "DefaultEndpointsProtocol=https;AccountName=testaccountname;AccountKey=4dVw+l0W8My+FwuZ08dWXn+gHxcmBtS7esLAQSrm6/Om3jeyUKKGMkfAh38kWZlItThQYsg31v23A0w/uVP4pg==;EndpointSuffix=core.windows.net";
          containsSecret: true
          match: 4dVw+l0W8My+FwuZ08dWXn+gHxcmBtS7esLAQSrm6/Om3jeyUKKGMkfAh38kWZlItThQYsg31v23A0w/uVP4pg==
      detection:
        matching:
          pattern: "AccountKey=([a-zA-Z0-9/\\+]{86}==)"
    
    - id: azure-subscription-keys
      metadata:
        name: Azure subscription keys should not be leaked
      detection:
        matching:
          # While pretty generic, looking for this pattern in the wild lands a majority of actual Azure keys.
          pattern: "(?is)Subscription-Key.{1,15}\\b([a-f0-9]{32})\\b"
        post:
          statisticalFilter:
            threshold: 3.0
      examples:
        - text: |
            data = self._download_json(
              f'https://production.example.com/platform/{path}', video_id, headers={
                'Ocp-Apim-Subscription-Key': 'efbb1a98f026d061464af685cd16dcd3',
              })['data']
          containsSecret: true
          match: efbb1a98f026d061464af685cd16dcd3
        - text: |
            this.bot = new builder.TextBot();
            this.dialog = new builder.LuisDialog('https://api.example.org/luis/v1/application?id=05487aa0-3fcf-4cf6-97e7-7ac1a12537e1&subscription-key=efbb1a98f026d061464af685cd16dcd3');
            this.bot.add('/', this.dialog);
          containsSecret: true
          match: efbb1a98f026d061464af685cd16dcd3
      
    - id: azure-subscription-keys-context-url-before
      metadata:
        name: Azure subscription keys should not be leaked
      detection:
        matching:
          # Matches a 32 chars hexadecimal string located at most 3 lines under a microsoft API URL.
          pattern: "(?is)api\\.[a-z0-9.]*microsoft.com(?:[^\\r\\n]*+\\r?\\n){1,3}?(?:[^\\r\\n]*)(?:secret|key).{1,15}\\b([a-f0-9]{32})\\b"
        post:
          statisticalFilter:
            threshold: 3.0
      examples:
        - text: |
            const string OcrEndPointV1 = "https://eastasia.api.cognitive.microsoft.com/vision/v2.0/ocr?detectOrientation=true&language=";
            const string VisionKey2 = "efbb1a98f026d061464af685cd16dcd3";
          containsSecret: true
          match: efbb1a98f026d061464af685cd16dcd3
        
    - id: azure-subscription-keys-context-url-after
      metadata:
        name: Azure subscription keys should not be leaked
      detection:
        matching:
          # Matches a 32 chars hexadecimal string located at most 3 lines above a microsoft API URL.
          pattern: "(?is)(?:secret|key).{1,15}\\b([a-f0-9]{32})\\b(?:[^\\r\\n]*+\\r?\n){1,3}?(?:[^\\r\\n]*)api\\.[a-z0-9.]*microsoft.com"
        post:
          statisticalFilter:
            threshold: 3.0
      examples:
        - text: |
            const string VisionKey2 = "efbb1a98f026d061464af685cd16dcd3";
            const string OcrEndPointV2 = "https://eastasia.api.cognitive.microsoft.com/vision/v2.0/ocr?detectOrientation=true&language=";
          containsSecret: true
          match: efbb1a98f026d061464af685cd16dcd3
