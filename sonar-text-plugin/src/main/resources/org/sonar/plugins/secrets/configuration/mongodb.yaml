provider:  
  metadata:
      name: MongoDB
      category: Data storage
      message: Make sure this MongoDB database password gets changed and removed from the code.

  rules:
    - id: mongo-url
      rspecKey: S6694
      metadata:
        name: MongoDB database passwords should not be disclosed
      detection:
        pre:
          include:
            content:
              - mongo
              - mongodb
        matching:
          # Look for URIs in the format "protocol://username:password@server:port/..."
          # The protocol is "mongo" or "mongodb" but can also be followed by a subprotocol, e.g. "mongodb+srv".
          # Certain special characters need to be percent-encoded so we can break matching when we find them.
          pattern: "\\bmongo(?:db)?(?:\\+\\w+)?://[^:@/ ]+:([^@/ ]+)@"
        post:
          # Potential FPs here are environment variables, templates and string substitutions, Azure placeholders such as
          # - $db_password
          # - [My Password]
          # - <My Password>
          # - %s
          # - $password
          # - ${password}
          # - $(password)
          # - #{password}#
          # - xxx, ***, ...
          patternNot:
            - "(?i)^([\\w\\.\\*])\\1{2,}$"
            - "^(\\$[a-z_]*)?(db|my)?_?pass(word|wd)?"
            - "^\\[[\\w\\t \\-]+\\]$"
            - "^<[\\w\\t \\-]+>$"
            - "^%s$"
            - "^\\$\\w+$"
            - "^\\$?\\{+[^}]*\\}+$"
            - "^\\$\\(\\w+\\)$"
            - "^#\\{([^@/ ]+)\\}#$"
      examples:
        - text: |
            backend "pg" {
              conn_str = "mongo://user:pass@database.example/terraform_backend"
            }
          containsSecret: false
        - text: |
            connStr = fmt.Sprintf("mongodb://%s:%s@:%s/%s%ssslmode=%s&host=%s",
              url.PathEscape(dbUser), url.PathEscape(dbPasswd), port, dbName, dbParam, dbsslMode, host)
          containsSecret: false
        - text: |
            if (!newConfig.DATABASE_URL) {
              const encodedUser = encodeURIComponent(newConfig.POSTHOG_DB_USER)
              const encodedPassword = encodeURIComponent(newConfig.POSTHOG_DB_PASSWORD)
              newConfig.DATABASE_URL = `mongodb://${encodedUser}:${encodedPassword}@${newConfig.POSTHOG_MONGO_HOST}:${newConfig.POSTHOG_MONGO_PORT}/${newConfig.POSTHOG_DB_NAME}`
            }
          containsSecret: false
        - text: |
            SqlSettingsDefaultDataSource = "mongodb+srv://mmuser:mostest@localhost/mattermost_test?sslmode=disable&connect_timeout=10&binary_parameters=yes"
          containsSecret: true
          match: mostest
        - text: |
            passwordFile := fs.String("password", "../../../tools/secrets/password.txt", "password file")
            databasePrefix := fs.String("database-prefix", "mongodb://mongo:mongo_password_padded_for_security@localhost:27017/ocr2vrf-test", "database prefix")
            databaseSuffixes := fs.String("database-suffixes", "sslmode=disable", "database parameters to be added")
          containsSecret: true
          match: mongo_password_padded_for_security
        - text: |
            driver: mongodb
            dsn: mongodb://foouser:foopass@localhost:27017/testdb?sslmode=disable
            table: footable
          containsSecret: true
          match: foopass
        - text: |
            AIRFLOW_CONN_METADATA_DB=mongodb+srv://airflow:airflow@mongo:27017/airflow
            AIRFLOW_VAR__METADATA_DB_SCHEMA=airflow
          containsSecret: true
          match: airflow
        - text: |
            CONNECTION_STRING=mongodb://user:#{azure-replacement-token}#@mongo.local:27017/database"
          containsSecret: false
        - text: |
            CONNECTION_STRING=mongodb://user:xxx@mongo.local:27017/database"
          containsSecret: false

    - id: mongodb-cli-unquoted
      rspecKey: S6694
      metadata:
        name: MongoDB database passwords should not be disclosed
      detection:
        pre:
          include:
            content:
              - mongo
              - mongodb
          reject:
            ext:
              - .md
              - .html
              - .example
              - .template
        matching:
          pattern: "\\bmongo(?:dump|import|restore|sh)?(?=[ \\t]).{0,100}[ \\t](?:-p|--password)[ \\t]+([^\"'\\s]{3,})"
        post:
          # Avoid matching values found on SourceGraph that look like dummy passwords or insertions.
          patternNot:
            - "^([\\w\\.\\*])\\1{2,}$"
            - "(?i)^(db|my)?_?pass(word|wd)?$"
            - "^\\$[A-Z_]+$"
            - "^\\$[{(]|^\\{{2,}"
            - "^<[a-z \\-]+>$"
            - "^--[a-z\\-]+$"
      examples:
        - text: |
            mongo --host localhost --username root --password password
          containsSecret: false
        - text: |
            mongodump --host localhost --user $USER --password $PASSWORD
          containsSecret: false
        - text: |
            mongosh "mongodb://localhost:27017" --username <username> --password <password>
          containsSecret: false
        - text: |
            mongo --host localhost --username root --password P@ssw0rd
          containsSecret: true
          match: P@ssw0rd
        - text: |
            mongo --host localhost --username root --password ***
          containsSecret: false

    - id: mongodb-cli-quoted-outer
      rspecKey: S6694
      metadata:
        name: MongoDB database passwords should not be disclosed
      detection:
        pre:
          include:
            content:
              - mongo
              - mongodb
          reject:
            ext:
              - .md
              - .html
              - .example
              - .template
        matching:
          pattern: "\\bmongo(?:dump|import|restore|sh)?(?=[ \\t]).{0,100}[ \\t](?:-p|--password)[ \\t]+(?:\\\\?[\"'])([^\\r\\n\"']{3,})(?:\\\\?[\"'])"
        post:
          # Avoid matching values found on SourceGraph that look like dummy passwords or insertions.
          patternNot:
            - "^([\\w\\.\\*])\\1{2,}$"
            - "(?i)^(db|my)?_?pass(word|wd)?$"
            - "^\\$[A-Z_]+$"
            - "^\\$[{(]"
            - "^\\{{2,}"
            - "^<[a-z \\-]+>$"
            - "^--[a-z\\-]+$"
      examples:
        - text: |
            mongo --host "localhost" --username "root" --password "password"
          containsSecret: false
        - text: |
            mongodump --host "localhost" --user "$USER" --password "$PASSWORD"
          containsSecret: false
        - text: |
            mongosh "mongodb://localhost:27017" --username "<username>" --password "<password>"
          containsSecret: false
        - text: |
            mongo --host "localhost" --username "root" --password "P@ssw0rd"
          containsSecret: true
          match: P@ssw0rd
        - text: |
            mongo --host "localhost" --username "root" --password "..."
          containsSecret: false
