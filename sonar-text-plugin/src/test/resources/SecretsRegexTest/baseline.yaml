issuesToVerify:
  - secretRuleKey: S6334
    secretRuleId: google-api-keys
    location: auxiliary-PATTERN_AROUND
    regexText: "(?i)com\\.google\\.android\\.(?:maps\\.v2|geo)\\.API_KEY|google[_\\W]?maps?|maps?[_\\W]?(?:api[_\\W]?)?key|https://www\\.google\\.com/maps/embed/v1/place"
    issueRuleKey: S5843
    message: Simplify this regular expression to reduce its complexity from 23 to the 20 allowed.
    details: "text: (?i)com\\.google\\.android\\.(?:maps\\.v2|geo)\\.API_KEY|google[_\\W]?maps?|maps?[_\\W]?(?:api[_\\W]?)?key|https://www\\.google\\.com/maps/embed/v1/place"

  - secretRuleKey: S6691
    secretRuleId: google-oauth-secret-no-prefix-client-id-after
    location: matching
    regexText: "(?i)secret(?:[^})\\\\r\\\\n]*+\\\\r?\\\\n)?[^})\\\\r\\\\n]{0,50}\\\\b([\\\\w\\\\-]{24})\\\\b(?:[^})\\\\r\\\\n]*+\\\\r?\\\\n){0,3}[^})\\\\r\\\\n]{0,300}\\\\.apps\\\\.googleusercontent\\\\.com\\\\b(?!(?:[^})\\\\r\\\\n]*+\\\\r?\\\\n)?[^})\\\\r\\\\n]{0,30}secret)"
    issueRuleKey: S5843
    message: Simplify this regular expression to reduce its complexity from 32 to the 20 allowed.
    details: "text: (?i)secret(?:[^})\\\\r\\\\n]*+\\\\r?\\\\n)?[^})\\\\r\\\\n]{0,50}\\\\b([\\\\w\\\\-]{24})\\\\b(?:[^})\\\\r\\\\n]*+\\\\r?\\\\n){0,3}[^})\\\\r\\\\n]{0,300}\\\\.apps\\\\.googleusercontent\\\\.com\\\\b(?!(?:[^})\\\\r\\\\n]*+\\\\r?\\\\n)?[^})\\\\r\\\\n]{0,30}secret)"

  - secretRuleKey: S6290
    secretRuleId: aws-session-tokens
    location: matching
    regexText: "(?i)session_?token(?:\"?\\\\s*[=:]\\\\s*\"?|>\\\\s*)([0-9a-z/+\"\\\\s=]{50,})(?:\\\\s*<|\\\\s*$|\"[;,]?|$)"
    issueRuleKey: S5843
    message: Simplify this regular expression to reduce its complexity from 26 to the 20 allowed.
    details: "text: (?i)session_?token(?:\"?\\\\s*[=:]\\\\s*\"?|>\\\\s*)([0-9a-z/+\"\\\\s=]{50,})(?:\\\\s*<|\\\\s*$|\"[;,]?|$)"

  - secretRuleKey: S6335
    secretRuleId: google-service-account-keys
    location: matching
    regexText: "(-----BEGIN PRIVATE KEY-----(?:\\\\s|\\\\\\\\{1,2}n)++(?:[0-9A-Za-z/+]{80,}|(?:[0-9A-Za-z/+]{40,}(?:\\\\s|\\\\\\\\{1,2}n)++)+[0-9A-Za-z/+=]+)={0,2}(?:\\\\s|\\\\\\\\{1,2}n)++-----END PRIVATE KEY-----(?:\\\\s|\\\\\\\\{1,2}n)?)"
    issueRuleKey: S5843
    message: Simplify this regular expression to reduce its complexity from 44 to the 20 allowed.
    details: "text: (-----BEGIN PRIVATE KEY-----(?:\\\\s|\\\\\\\\{1,2}n)++(?:[0-9A-Za-z/+]{80,}|(?:[0-9A-Za-z/+]{40,}(?:\\\\s|\\\\\\\\{1,2}n)++)+[0-9A-Za-z/+=]+)={0,2}(?:\\\\s|\\\\\\\\{1,2}n)++-----END PRIVATE KEY-----(?:\\\\s|\\\\\\\\{1,2}n)?)"

  - secretRuleKey: S6687
    secretRuleId: settings.py-secret-key-env-default
    location: matching
    regexText: "\\\\bSECRET_KEY(?:_FALLBACKS)?\\\\s*=\\\\s*(?:os\\\\.getenv|env(?:\\\\.str)?)\\\\(\\\\s*['\"][^'\"\\\\r\\\\n]+['\"]\\\\s*,\\\\s*(?:default\\\\s*=\\\\s*)?['\"]([^'\"\\\\r\\\\n]+)"
    issueRuleKey: S5843
    message: Simplify this regular expression to reduce its complexity from 21 to the 20 allowed.
    details: "text: \\\\bSECRET_KEY(?:_FALLBACKS)?\\\\s*=\\\\s*(?:os\\\\.getenv|env(?:\\\\.str)?)\\\\(\\\\s*['\"][^'\"\\\\r\\\\n]+['\"]\\\\s*,\\\\s*(?:default\\\\s*=\\\\s*)?['\"]([^'\"\\\\r\\\\n]+)"

  - secretRuleKey: S6694
    secretRuleId: mongo-url
    location: post
    regexText: "^\\\\${0,2}\\\\{+[^}]*\\\\}+$"
    issueRuleKey: S5852
    message: Make sure the regex used here, which is vulnerable to polynomial runtime due to backtracking, cannot lead to denial of service.
    details: ""

  - secretRuleKey: S6290
    secretRuleId: aws-session-tokens
    location: matching
    regexText: "(?i)session_?token(?:\"?\\\\s*[=:]\\\\s*\"?|>\\\\s*)([0-9a-z/+\"\\\\s=]{50,})(?:\\\\s*<|\\\\s*$|\"[;,]?|$)"
    issueRuleKey: S5852
    message: Make sure the regex used here, which is vulnerable to polynomial runtime due to backtracking, cannot lead to denial of service.
    details: ""

  - secretRuleKey: S6698
    secretRuleId: postgres-url
    location: post
    regexText: "^\\\\{+[^}]*\\\\}+$"
    issueRuleKey: S5852
    message: Make sure the regex used here, which is vulnerable to polynomial runtime due to backtracking, cannot lead to denial of service.
    details: ""

  - secretRuleKey: S6698
    secretRuleId: postgres-url-password-from-env-with-default
    location: post
    regexText: "^\\\\{+[^}]*\\\\}+$"
    issueRuleKey: S5852
    message: Make sure the regex used here, which is vulnerable to polynomial runtime due to backtracking, cannot lead to denial of service.
    details: ""

  - secretRuleKey: S6698
    secretRuleId: postgres-env-pg_password-unquoted
    location: post
    regexText: "^\\\\{+[^}]*\\\\}+$"
    issueRuleKey: S5852
    message: Make sure the regex used here, which is vulnerable to polynomial runtime due to backtracking, cannot lead to denial of service.
    details: ""

  - secretRuleKey: S6698
    secretRuleId: postgres-env-pg_password-quoted
    location: post
    regexText: "^\\\\{+[^}]*\\\\}+$"
    issueRuleKey: S5852
    message: Make sure the regex used here, which is vulnerable to polynomial runtime due to backtracking, cannot lead to denial of service.
    details: ""

  - secretRuleKey: S6698
    secretRuleId: psql-cli-unquoted
    location: post
    regexText: "^\\\\{+[^}]*\\\\}+$"
    issueRuleKey: S5852
    message: Make sure the regex used here, which is vulnerable to polynomial runtime due to backtracking, cannot lead to denial of service.
    details: ""

  - secretRuleKey: S6698
    secretRuleId: psql-cli-quoted
    location: post
    regexText: "^\\\\{+[^}]*\\\\}+$"
    issueRuleKey: S5852
    message: Make sure the regex used here, which is vulnerable to polynomial runtime due to backtracking, cannot lead to denial of service.
    details: ""

  - secretRuleKey: S6697
    secretRuleId: mysql-url
    location: matching
    regexText: "\\\\bmysqlx?(?:\\\\+\\\\w+)?://(?:\\\\{+[^}]*\\\\}+|[^{][^:@/ ]+):([^@/ ]{2,})@"
    issueRuleKey: S5852
    message: Make sure the regex used here, which is vulnerable to polynomial runtime due to backtracking, cannot lead to denial of service.
    details: ""

  - secretRuleKey: S6684
    secretRuleId: azure-subscription-keys-context-url-after
    location: matching
    regexText: "(?is)(?:secret|key).{1,15}\\\\b([a-f0-9]{32})\\\\b(?:[^\\\\r\\\\n]*+\\\\r?\n){1,3}?[^\\\\r\\\\n]*api\\\\.[a-z0-9.]*microsoft.com"
    issueRuleKey: S5852
    message: Make sure the regex used here, which is vulnerable to polynomial runtime due to backtracking, cannot lead to denial of service.
    details: ""

  - secretRuleKey: S6687
    secretRuleId: env-secret-key
    location: matching
    regexText: "(?m)\\\\bSECRET_KEY(?:_FALLBACKS)?\\\\s*=\\\\s*(.*)$"
    issueRuleKey: S5852
    message: Make sure the regex used here, which is vulnerable to polynomial runtime due to backtracking, cannot lead to denial of service.
    details: ""

  - secretRuleKey: S6703
    secretRuleId: jdbc-connection-string
    location: post
    regexText: "^\\\\{+[^}]*\\\\}+$"
    issueRuleKey: S5852
    message: Make sure the regex used here, which is vulnerable to polynomial runtime due to backtracking, cannot lead to denial of service.
    details: ""

  - secretRuleKey: S6703
    secretRuleId: odbc-connection-string
    location: post
    regexText: "\\\\{+[^}]++\\\\}+"
    issueRuleKey: S5852
    message: Make sure the regex used here, which is vulnerable to polynomial runtime due to backtracking, cannot lead to denial of service.
    details: ""

  - secretRuleKey: S6703
    secretRuleId: odbc-connection-string
    location: post
    regexText: "parameters\\\\(+[^)]*\\\\)++"
    issueRuleKey: S5852
    message: Make sure the regex used here, which is vulnerable to polynomial runtime due to backtracking, cannot lead to denial of service.
    details: ""

  - secretRuleKey: S6703
    secretRuleId: odbc-connection-string
    location: post
    regexText: "\\\\{+[^}]*\\\\}++"
    issueRuleKey: S5852
    message: Make sure the regex used here, which is vulnerable to polynomial runtime due to backtracking, cannot lead to denial of service.
    details: ""

  - secretRuleKey: S6703
    secretRuleId: odbc-connection-string
    location: post
    regexText: "^\\\\{+[^}]*\\\\}+$"
    issueRuleKey: S5852
    message: Make sure the regex used here, which is vulnerable to polynomial runtime due to backtracking, cannot lead to denial of service.
    details: ""

  # This regex is long and complex because the secret itself is long and complex.
  - secretRuleKey: S7011
    secretRuleId: azure-eventgrid-t2-shared-access-secrets
    location: matching
    regexText: "(?i)\\\\b(r=(?<resource>https%3a%2f%2f[-a-z0-9%._]{1,200}\\\\.eventgrid\\\\.azure\\\\.net%2fapi%2fevents(?:%3f)?(?:apiVersion%3d\\\\d{4}-\\\\d{1,2}-\\\\d{1,2})?)&e=(?<expiration>\\\\d{1,2}%2f\\\\d{1,2}%2f\\\\d{4}(?:%20|\\\\+)\\\\d{1,2}%3a\\\\d{1,2}%3a\\\\d{1,2}(?:%20|\\\\+)[AP]M)&s=(?<signature>[-a-z0-9+\\\\/_%]{30,100}%3d))\\\\b"
    issueRuleKey: S5843
    message: Simplify this regular expression to reduce its complexity from 22 to the 20 allowed.
    details: "text: (?i)\\\\b(r=(?<resource>https%3a%2f%2f[-a-z0-9%._]{1,200}\\\\.eventgrid\\\\.azure\\\\.net%2fapi%2fevents(?:%3f)?(?:apiVersion%3d\\\\d{4}-\\\\d{1,2}-\\\\d{1,2})?)&e=(?<expiration>\\\\d{1,2}%2f\\\\d{1,2}%2f\\\\d{4}(?:%20|\\\\+)\\\\d{1,2}%3a\\\\d{1,2}%3a\\\\d{1,2}(?:%20|\\\\+)[AP]M)&s=(?<signature>[-a-z0-9+\\\\/_%]{30,100}%3d))\\\\b"
